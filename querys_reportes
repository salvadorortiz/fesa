CREATE OR REPLACE VIEW dt_repo_reserva AS
SELECT com.complejo_id, can.cancha_id, recan.reserva_cancha_id, res.reserva_id, fpag.forma_pago_id, 
 	to_char(recan.fecha, 'YYYY-MM-DD') as fecha_reserva, 
CASE
	WHEN c.cliente_id IS NOT NULL THEN COALESCE( c.nombre, '' )
	ELSE COALESCE( e.nombre, '' )
END AS info_cliente,
res.nombre_evento,
CASE 
	WHEN res.estado = 'C' THEN '<span class="label label-primary">Confirmado</span>'
	WHEN res.estado = 'T' THEN '<span class="label label-default">Tentativo</span>'
	WHEN res.estado = 'R' THEN '<span class="label label-success">Realizado</span>'
	WHEN res.estado = 'N' THEN '<span class="label label-danger">No realizado</span>'
END AS estado_reserva,
fpag.nombre AS nombre_formapago,
ta.nombre AS nombre_tipoalquiler,
ff.nombre AS nombre_formafacturacion,
CASE 
	WHEN res.forma_pago_id = 1 THEN '$'||to_char(res.precio, '9G999.99')
	ELSE ''
END AS precio_reserva
--SELECT * 
FROM modulo_1_complejo com
INNER JOIN modulo_1_cancha can ON can.complejo_id = com.complejo_id
INNER JOIN modulo_1_reservacancha recan ON recan.cancha_id=can.cancha_id
INNER JOIN modulo_1_reserva res ON res.reserva_id=recan.reserva_id
INNER JOIN modulo_1_formapago fpag ON fpag.forma_pago_id=res.forma_pago_id
INNER JOIN modulo_1_formafacturacion ff ON ff.forma_facturacion_id = res.forma_facturacion_id
INNER JOIN modulo_1_tipoalquiler ta ON ta.tipo_alquiler_id = res.tipo_alquiler_id
LEFT JOIN modulo_1_cliente c ON c.cliente_id=res.cliente_id
LEFT JOIN modulo_1_empresa e ON e.empresa_id=res.empresa_id
ORDER BY recan.fecha DESC


CREATE VIEW dt_repo_clientes AS 
SELECT '<i class="fa fa-child"></i>' AS tipo, c.nombre As nombre_cliente, c.ingresado_por,
(SELECT nombre_evento from modulo_1_reserva where cliente_id=c.cliente_id
order by fecha_ingreso asc limit 1) AS primer_evento,
(SELECT nombre_evento from modulo_1_reserva where cliente_id=c.cliente_id
order by fecha_ingreso desc limit 1) AS ultimo_evento
FROM modulo_1_cliente c
UNION
SELECT '<i class="fa fa-building"></i>' AS tipo, c.nombre As nombre_cliente, c.ingresado_por,
(SELECT nombre_evento from modulo_1_reserva where empresa_id=c.empresa_id
order by fecha_ingreso asc limit 1) AS primer_evento,
(SELECT nombre_evento from modulo_1_reserva where empresa_id=c.empresa_id
order by fecha_ingreso desc limit 1) AS ultimo_evento
FROM modulo_1_empresa c


Create or replace view dt_repo_remesa as
SELECT res.reserva_id,
 to_char(res.fecha_ingreso::timestamp with time zone, 'YYYY-MM-DD'::text) as fecha_ingreso,
res.nombre_evento, 
Case
	WHEN c.cliente_id is null then e.nombre
	ELSE c.nombre
end as nombre_cliente, 
u.nombre as nombre_usuario,
'$'|| COALESCE(to_char(res.precio,'9G999.99'),to_char(0,'9G999.99')) as precio,
'$'|| COALESCE(to_char(res.costo,'9G999.99'),to_char(0,'9G999.99')) as costo, 
'$'|| COALESCE(to_char(res.precio - res.costo,'9G999.99'),to_char(0,'9G999.99')) as utilidad,
'$'|| COALESCE(to_char((select sum(monto) from modulo_1_remesaxreserva where reserva_id=res.reserva_id),'9G999.99'),to_char(0,'9G999.99')) as remesado,
'$'|| COALESCE(to_char(res.precio - (select sum(monto) from modulo_1_remesaxreserva where reserva_id=res.reserva_id),'9G999.99'),to_char(0,'9G999.99')) as remanente
, res.usuario_id as usuario
FROM modulo_1_remesaxreserva rr 
inner join modulo_1_reserva res on res.reserva_id = rr.reserva_id
inner join modulo_1_usuario u on u.usuario_id=res.usuario_id
left join modulo_1_cliente c on res.cliente_id=c.cliente_id
left join modulo_1_empresa e on res.empresa_id=e.empresa_id 
group by res.reserva_id,c.cliente_id,e.nombre,res.nombre_evento,res.usuario_id,u.nombre
